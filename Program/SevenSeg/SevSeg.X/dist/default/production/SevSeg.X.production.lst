

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Oct 19 14:18:36 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           	psect	smallconst
    16  000804                     __psmallconst:
    17                           	opt stack 0
    18  000804  00                 	db	0
    19  000805                     _segData:
    20                           	opt stack 0
    21  000805  3F                 	db	63
    22  000806  06                 	db	6
    23  000807  5B                 	db	91
    24  000808  4F                 	db	79
    25  000809  66                 	db	102
    26  00080A  6D                 	db	109
    27  00080B  7D                 	db	125
    28  00080C  07                 	db	7
    29  00080D  7F                 	db	127
    30  00080E  6F                 	db	111
    31  00080F                     __end_of_segData:
    32                           	opt stack 0
    33  0000                     _LATA	set	3977
    34  0000                     _LATAbits	set	3977
    35  0000                     _LATB	set	3978
    36  0000                     _TRISAbits	set	3986
    37  0000                     _TRISB	set	3987
    38  00080F  00                 	db	0	; dummy byte at the end
    39  0000                     
    40                           ; #config settings
    41                           
    42                           	psect	cinit
    43  007DB4                     __pcinit:
    44                           	opt stack 0
    45  007DB4                     start_initialization:
    46                           	opt stack 0
    47  007DB4                     __initialization:
    48                           	opt stack 0
    49  007DB4                     end_of_initialization:
    50                           	opt stack 0
    51  007DB4                     __end_of__initialization:
    52                           	opt stack 0
    53  007DB4  0E00               	movlw	low (__Lmediumconst shr (0+16))
    54  007DB6  6EF8               	movwf	tblptru,c
    55  007DB8  0100               	movlb	0
    56  007DBA  EF9E  F03F         	goto	_main	;jump to C main() function
    57                           tblptru	equ	0xFF8
    58                           
    59                           	psect	cstackCOMRAM
    60  000001                     __pcstackCOMRAM:
    61                           	opt stack 0
    62  000001                     ?___awdiv:
    63                           	opt stack 0
    64  000001                     ?___awmod:
    65                           	opt stack 0
    66  000001                     delay@time:
    67                           	opt stack 0
    68  000001                     ___awdiv@dividend:
    69                           	opt stack 0
    70  000001                     ___awmod@dividend:
    71                           	opt stack 0
    72                           
    73                           ; 2 bytes @ 0x0
    74  000001                     	ds	2
    75  000003                     delay@i:
    76                           	opt stack 0
    77  000003                     ___awdiv@divisor:
    78                           	opt stack 0
    79  000003                     ___awmod@divisor:
    80                           	opt stack 0
    81                           
    82                           ; 2 bytes @ 0x2
    83  000003                     	ds	2
    84  000005                     ??___awdiv:
    85  000005                     ??___awmod:
    86                           
    87                           ; 0 bytes @ 0x4
    88  000005                     	ds	1
    89  000006                     ___awdiv@counter:
    90                           	opt stack 0
    91  000006                     ___awmod@counter:
    92                           	opt stack 0
    93                           
    94                           ; 1 bytes @ 0x5
    95  000006                     	ds	1
    96  000007                     ___awdiv@sign:
    97                           	opt stack 0
    98  000007                     ___awmod@sign:
    99                           	opt stack 0
   100                           
   101                           ; 1 bytes @ 0x6
   102  000007                     	ds	1
   103  000008                     ___awdiv@quotient:
   104                           	opt stack 0
   105                           
   106                           ; 2 bytes @ 0x7
   107  000008                     	ds	2
   108  00000A                     ??_main:
   109                           
   110                           ; 0 bytes @ 0x9
   111  00000A                     	ds	1
   112  00000B                     main@digit1:
   113                           	opt stack 0
   114                           
   115                           ; 1 bytes @ 0xA
   116  00000B                     	ds	1
   117  00000C                     main@digit2:
   118                           	opt stack 0
   119                           
   120                           ; 1 bytes @ 0xB
   121  00000C                     	ds	1
   122  00000D                     main@i:
   123                           	opt stack 0
   124                           
   125                           ; 2 bytes @ 0xC
   126  00000D                     	ds	2
   127  00000F                     main@count:
   128                           	opt stack 0
   129                           
   130                           ; 1 bytes @ 0xE
   131  00000F                     	ds	1
   132                           tblptru	equ	0xFF8
   133                           
   134 ;;
   135 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   136 ;;
   137 ;; *************** function _main *****************
   138 ;; Defined at:
   139 ;;		line 32 in file "main.c"
   140 ;; Parameters:    Size  Location     Type
   141 ;;		None
   142 ;; Auto vars:     Size  Location     Type
   143 ;;  i               2   12[COMRAM] unsigned int 
   144 ;;  count           1   14[COMRAM] unsigned char 
   145 ;;  digit2          1   11[COMRAM] unsigned char 
   146 ;;  digit1          1   10[COMRAM] unsigned char 
   147 ;; Return value:  Size  Location     Type
   148 ;;                  2   22[COMRAM] int 
   149 ;; Registers used:
   150 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   151 ;; Tracked objects:
   152 ;;		On entry : 0/0
   153 ;;		On exit  : 0/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   156 ;;      Params:         0       0       0       0       0       0       0       0       0
   157 ;;      Locals:         5       0       0       0       0       0       0       0       0
   158 ;;      Temps:          1       0       0       0       0       0       0       0       0
   159 ;;      Totals:         6       0       0       0       0       0       0       0       0
   160 ;;Total ram usage:        6 bytes
   161 ;; Hardware stack levels required when called:    1
   162 ;; This function calls:
   163 ;;		___awdiv
   164 ;;		___awmod
   165 ;;		_delay
   166 ;; This function is called by:
   167 ;;		Startup code after reset
   168 ;; This function uses a non-reentrant model
   169 ;;
   170                           
   171                           	psect	text0
   172  007F3C                     __ptext0:
   173                           	opt stack 0
   174  007F3C                     _main:
   175                           	opt stack 30
   176                           
   177                           ;main.c: 34: unsigned char count = 0;
   178                           
   179                           ;incstack = 0
   180  007F3C  6E0A               	movwf	??_main& (0+255),c
   181  007F3E  0E00               	movlw	0
   182  007F40  6E0F               	movwf	main@count,c
   183  007F42  500A               	movf	??_main& (0+255),w,c
   184                           
   185                           ;main.c: 35: unsigned char digit1, digit2;
   186                           ;main.c: 36: unsigned int i;
   187                           ;main.c: 37: TRISB = 0x00;
   188  007F44  0E00               	movlw	0
   189  007F46  6E93               	movwf	3987,c	;volatile
   190                           
   191                           ;main.c: 38: LATA = 0x00;
   192  007F48  0E00               	movlw	0
   193  007F4A  6E89               	movwf	3977,c	;volatile
   194                           
   195                           ;main.c: 39: TRISAbits.TRISA0 = 0;
   196  007F4C  9092               	bcf	3986,0,c	;volatile
   197                           
   198                           ;main.c: 40: TRISAbits.TRISA1 = 0;
   199  007F4E  9292               	bcf	3986,1,c	;volatile
   200  007F50                     l23:
   201                           
   202                           ;main.c: 42: {
   203                           ;main.c: 43: for(count=0;count<100;count++)
   204  007F50  6E0A               	movwf	??_main& (0+255),c
   205  007F52  0E00               	movlw	0
   206  007F54  6E0F               	movwf	main@count,c
   207  007F56  500A               	movf	??_main& (0+255),w,c
   208  007F58  0E63               	movlw	99
   209  007F5A  640F               	cpfsgt	main@count,c
   210  007F5C  D001               	goto	l742
   211  007F5E  D7F8               	goto	l23
   212  007F60                     l742:
   213                           
   214                           ;main.c: 44: {
   215                           ;main.c: 45: digit1 = count / 10;
   216  007F60  C00F  F001         	movff	main@count,___awdiv@dividend
   217  007F64  6A02               	clrf	___awdiv@dividend+1,c
   218  007F66  0E00               	movlw	0
   219  007F68  6E04               	movwf	___awdiv@divisor+1,c
   220  007F6A  0E0A               	movlw	10
   221  007F6C  6E03               	movwf	___awdiv@divisor,c
   222  007F6E  EC46  F03F         	call	___awdiv	;wreg free
   223  007F72  5001               	movf	?___awdiv,w,c
   224  007F74  6E0B               	movwf	main@digit1,c
   225                           
   226                           ;main.c: 46: digit2 = count % 10;
   227  007F76  C00F  F001         	movff	main@count,___awmod@dividend
   228  007F7A  6A02               	clrf	___awmod@dividend+1,c
   229  007F7C  0E00               	movlw	0
   230  007F7E  6E04               	movwf	___awmod@divisor+1,c
   231  007F80  0E0A               	movlw	10
   232  007F82  6E03               	movwf	___awmod@divisor,c
   233  007F84  ECF8  F03E         	call	___awmod	;wreg free
   234  007F88  5001               	movf	?___awmod,w,c
   235  007F8A  6E0C               	movwf	main@digit2,c
   236                           
   237                           ;main.c: 47: for(i=0;i<100;i++)
   238  007F8C  0E00               	movlw	0
   239  007F8E  6E0E               	movwf	main@i+1,c
   240  007F90  0E00               	movlw	0
   241  007F92  6E0D               	movwf	main@i,c
   242  007F94  0E64               	movlw	100
   243  007F96  5C0D               	subwf	main@i,w,c
   244  007F98  0E00               	movlw	0
   245  007F9A  580E               	subwfb	main@i+1,w,c
   246  007F9C  B0D8               	btfsc	status,0,c
   247  007F9E  D02B               	goto	l764
   248                           
   249                           ;main.c: 48: {
   250                           ;main.c: 49: LATAbits.LATA0 = 1;
   251  007FA0  8089               	bsf	3977,0,c	;volatile
   252                           
   253                           ;main.c: 50: LATAbits.LATA1 = 0;
   254  007FA2  9289               	bcf	3977,1,c	;volatile
   255                           
   256                           ;main.c: 51: LATB = ~segData[digit1];
   257  007FA4  500B               	movf	main@digit1,w,c
   258  007FA6  0D01               	mullw	1
   259  007FA8  0E05               	movlw	low _segData
   260  007FAA  24F3               	addwf	prodl,w,c
   261  007FAC  6EF6               	movwf	tblptrl,c
   262  007FAE  0E08               	movlw	high _segData
   263  007FB0  20F4               	addwfc	prodh,w,c
   264  007FB2  6EF7               	movwf	tblptrh,c
   265  007FB4  0008               	tblrd		*
   266  007FB6  50F5               	movf	tablat,w,c
   267  007FB8  0AFF               	xorlw	255
   268  007FBA  6E8A               	movwf	3978,c	;volatile
   269                           
   270                           ;main.c: 52: delay(2);
   271  007FBC  0E00               	movlw	0
   272  007FBE  6E02               	movwf	delay@time+1,c
   273  007FC0  0E02               	movlw	2
   274  007FC2  6E01               	movwf	delay@time,c
   275  007FC4  ECDF  F03E         	call	_delay	;wreg free
   276                           
   277                           ;main.c: 53: LATAbits.LATA0 = 0;
   278  007FC8  9089               	bcf	3977,0,c	;volatile
   279                           
   280                           ;main.c: 54: LATAbits.LATA1 = 1;
   281  007FCA  8289               	bsf	3977,1,c	;volatile
   282                           
   283                           ;main.c: 55: LATB = ~segData[digit2];
   284  007FCC  500C               	movf	main@digit2,w,c
   285  007FCE  0D01               	mullw	1
   286  007FD0  0E05               	movlw	low _segData
   287  007FD2  24F3               	addwf	prodl,w,c
   288  007FD4  6EF6               	movwf	tblptrl,c
   289  007FD6  0E08               	movlw	high _segData
   290  007FD8  20F4               	addwfc	prodh,w,c
   291  007FDA  6EF7               	movwf	tblptrh,c
   292  007FDC  0008               	tblrd		*
   293  007FDE  50F5               	movf	tablat,w,c
   294  007FE0  0AFF               	xorlw	255
   295  007FE2  6E8A               	movwf	3978,c	;volatile
   296                           
   297                           ;main.c: 56: delay(2);
   298  007FE4  0E00               	movlw	0
   299  007FE6  6E02               	movwf	delay@time+1,c
   300  007FE8  0E02               	movlw	2
   301  007FEA  6E01               	movwf	delay@time,c
   302  007FEC  ECDF  F03E         	call	_delay	;wreg free
   303  007FF0  4A0D               	infsnz	main@i,f,c
   304  007FF2  2A0E               	incf	main@i+1,f,c
   305  007FF4  D7CF               	goto	L1
   306  007FF6                     l764:
   307  007FF6  2A0F               	incf	main@count,f,c
   308  007FF8  0E63               	movlw	99
   309  007FFA  640F               	cpfsgt	main@count,c
   310  007FFC  D7B1               	goto	l742
   311  007FFE  D7A8               	goto	l23
   312  008000                     __end_of_main:
   313                           	opt stack 0
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           prodh	equ	0xFF4
   319                           prodl	equ	0xFF3
   320                           status	equ	0xFD8
   321                           
   322 ;; *************** function _delay *****************
   323 ;; Defined at:
   324 ;;		line 25 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;  time            2    0[COMRAM] unsigned int 
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  i               2    2[COMRAM] int 
   329 ;; Return value:  Size  Location     Type
   330 ;;		None               void
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   338 ;;      Params:         2       0       0       0       0       0       0       0       0
   339 ;;      Locals:         2       0       0       0       0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0       0       0
   341 ;;      Totals:         4       0       0       0       0       0       0       0       0
   342 ;;Total ram usage:        4 bytes
   343 ;; Hardware stack levels used:    1
   344 ;; This function calls:
   345 ;;		Nothing
   346 ;; This function is called by:
   347 ;;		_main
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text1
   352  007DBE                     __ptext1:
   353                           	opt stack 0
   354  007DBE                     _delay:
   355                           	opt stack 30
   356                           
   357                           ;main.c: 27: int i;
   358                           ;main.c: 28: while(time--)
   359                           
   360                           ;incstack = 0
   361  007DBE  D00F               	goto	l646
   362  007DC0                     l636:
   363                           
   364                           ;main.c: 29: for(i=0;i<500;i++);
   365  007DC0  0E00               	movlw	0
   366  007DC2  6E04               	movwf	delay@i+1,c
   367  007DC4  0E00               	movlw	0
   368  007DC6  6E03               	movwf	delay@i,c
   369  007DC8  5004               	movf	delay@i+1,w,c
   370  007DCA  0A80               	xorlw	128
   371  007DCC  0F7F               	addlw	-129
   372  007DCE  0EF4               	movlw	244
   373  007DD0  B4D8               	btfsc	status,2,c
   374  007DD2  5C03               	subwf	delay@i,w,c
   375  007DD4  B0D8               	btfsc	status,0,c
   376  007DD6  D003               	goto	l646
   377  007DD8  4A03               	infsnz	delay@i,f,c
   378  007DDA  2A04               	incf	delay@i+1,f,c
   379  007DDC  D7F5               	goto	L2
   380  007DDE                     l646:
   381  007DDE  0601               	decf	delay@time,f,c
   382  007DE0  A0D8               	btfss	status,0,c
   383  007DE2  0602               	decf	delay@time+1,f,c
   384  007DE4  2801               	incf	delay@time& (0+255),w,c
   385  007DE6  B4D8               	btfsc	status,2,c
   386  007DE8  2802               	incf	(delay@time+1)& (0+255),w,c
   387  007DEA  B4D8               	btfsc	status,2,c
   388  007DEC  0012               	return	
   389  007DEE  D7E8               	goto	l636
   390  007DF0                     __end_of_delay:
   391                           	opt stack 0
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           prodh	equ	0xFF4
   397                           prodl	equ	0xFF3
   398                           status	equ	0xFD8
   399                           
   400 ;; *************** function ___awmod *****************
   401 ;; Defined at:
   402 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\awmod.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;  dividend        2    0[COMRAM] int 
   405 ;;  divisor         2    2[COMRAM] int 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  sign            1    6[COMRAM] unsigned char 
   408 ;;  counter         1    5[COMRAM] unsigned char 
   409 ;; Return value:  Size  Location     Type
   410 ;;                  2    0[COMRAM] int 
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0, prodl
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   418 ;;      Params:         4       0       0       0       0       0       0       0       0
   419 ;;      Locals:         2       0       0       0       0       0       0       0       0
   420 ;;      Temps:          1       0       0       0       0       0       0       0       0
   421 ;;      Totals:         7       0       0       0       0       0       0       0       0
   422 ;;Total ram usage:        7 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text2
   432  007DF0                     __ptext2:
   433                           	opt stack 0
   434  007DF0                     ___awmod:
   435                           	opt stack 30
   436                           
   437                           ;incstack = 0
   438  007DF0  6E05               	movwf	??___awmod& (0+255),c
   439  007DF2  0E00               	movlw	0
   440  007DF4  6E07               	movwf	___awmod@sign,c
   441  007DF6  5005               	movf	??___awmod& (0+255),w,c
   442  007DF8  5002               	movf	___awmod@dividend+1,w,c
   443  007DFA  0A80               	xorlw	128
   444  007DFC  6EF3               	movwf	prodl,c
   445  007DFE  0E80               	movlw	128
   446  007E00  5CF3               	subwf	prodl,w,c
   447  007E02  0E00               	movlw	0
   448  007E04  B4D8               	btfsc	status,2,c
   449  007E06  5C01               	subwf	___awmod@dividend,w,c
   450  007E08  B0D8               	btfsc	status,0,c
   451  007E0A  D008               	goto	l700
   452  007E0C  6C01               	negf	___awmod@dividend,c
   453  007E0E  1E02               	comf	___awmod@dividend+1,f,c
   454  007E10  B0D8               	btfsc	status,0,c
   455  007E12  2A02               	incf	___awmod@dividend+1,f,c
   456  007E14  6E05               	movwf	??___awmod& (0+255),c
   457  007E16  0E01               	movlw	1
   458  007E18  6E07               	movwf	___awmod@sign,c
   459  007E1A  5005               	movf	??___awmod& (0+255),w,c
   460  007E1C                     l700:
   461  007E1C  5004               	movf	___awmod@divisor+1,w,c
   462  007E1E  0A80               	xorlw	128
   463  007E20  6EF3               	movwf	prodl,c
   464  007E22  0E80               	movlw	128
   465  007E24  5CF3               	subwf	prodl,w,c
   466  007E26  0E00               	movlw	0
   467  007E28  B4D8               	btfsc	status,2,c
   468  007E2A  5C03               	subwf	___awmod@divisor,w,c
   469  007E2C  B0D8               	btfsc	status,0,c
   470  007E2E  D004               	goto	l704
   471  007E30  6C03               	negf	___awmod@divisor,c
   472  007E32  1E04               	comf	___awmod@divisor+1,f,c
   473  007E34  B0D8               	btfsc	status,0,c
   474  007E36  2A04               	incf	___awmod@divisor+1,f,c
   475  007E38                     l704:
   476  007E38  5004               	movf	___awmod@divisor+1,w,c
   477  007E3A  1003               	iorwf	___awmod@divisor,w,c
   478  007E3C  B4D8               	btfsc	status,2,c
   479  007E3E  D01A               	goto	l720
   480  007E40  6E05               	movwf	??___awmod& (0+255),c
   481  007E42  0E01               	movlw	1
   482  007E44  6E06               	movwf	___awmod@counter,c
   483  007E46  5005               	movf	??___awmod& (0+255),w,c
   484  007E48  D004               	goto	l710
   485  007E4A                     l708:
   486  007E4A  90D8               	bcf	status,0,c
   487  007E4C  3603               	rlcf	___awmod@divisor,f,c
   488  007E4E  3604               	rlcf	___awmod@divisor+1,f,c
   489  007E50  2A06               	incf	___awmod@counter,f,c
   490  007E52                     l710:
   491  007E52  AE04               	btfss	___awmod@divisor+1,7,c
   492  007E54  D7FA               	goto	l708
   493  007E56                     l712:
   494  007E56  5003               	movf	___awmod@divisor,w,c
   495  007E58  5C01               	subwf	___awmod@dividend,w,c
   496  007E5A  5004               	movf	___awmod@divisor+1,w,c
   497  007E5C  5802               	subwfb	___awmod@dividend+1,w,c
   498  007E5E  A0D8               	btfss	status,0,c
   499  007E60  D004               	goto	l716
   500  007E62  5003               	movf	___awmod@divisor,w,c
   501  007E64  5E01               	subwf	___awmod@dividend,f,c
   502  007E66  5004               	movf	___awmod@divisor+1,w,c
   503  007E68  5A02               	subwfb	___awmod@dividend+1,f,c
   504  007E6A                     l716:
   505  007E6A  90D8               	bcf	status,0,c
   506  007E6C  3204               	rrcf	___awmod@divisor+1,f,c
   507  007E6E  3203               	rrcf	___awmod@divisor,f,c
   508  007E70  2E06               	decfsz	___awmod@counter,f,c
   509  007E72  D7F1               	goto	l712
   510  007E74                     l720:
   511  007E74  5007               	movf	___awmod@sign,w,c
   512  007E76  B4D8               	btfsc	status,2,c
   513  007E78  D004               	goto	l724
   514  007E7A  6C01               	negf	___awmod@dividend,c
   515  007E7C  1E02               	comf	___awmod@dividend+1,f,c
   516  007E7E  B0D8               	btfsc	status,0,c
   517  007E80  2A02               	incf	___awmod@dividend+1,f,c
   518  007E82                     l724:
   519  007E82  C001  F001         	movff	___awmod@dividend,?___awmod
   520  007E86  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   521  007E8A  0012               	return	
   522  007E8C                     __end_of___awmod:
   523                           	opt stack 0
   524                           tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           prodh	equ	0xFF4
   529                           prodl	equ	0xFF3
   530                           status	equ	0xFD8
   531                           
   532 ;; *************** function ___awdiv *****************
   533 ;; Defined at:
   534 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\awdiv.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  dividend        2    0[COMRAM] int 
   537 ;;  divisor         2    2[COMRAM] int 
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  quotient        2    7[COMRAM] int 
   540 ;;  sign            1    6[COMRAM] unsigned char 
   541 ;;  counter         1    5[COMRAM] unsigned char 
   542 ;; Return value:  Size  Location     Type
   543 ;;                  2    0[COMRAM] int 
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0, prodl
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   551 ;;      Params:         4       0       0       0       0       0       0       0       0
   552 ;;      Locals:         4       0       0       0       0       0       0       0       0
   553 ;;      Temps:          1       0       0       0       0       0       0       0       0
   554 ;;      Totals:         9       0       0       0       0       0       0       0       0
   555 ;;Total ram usage:        9 bytes
   556 ;; Hardware stack levels used:    1
   557 ;; This function calls:
   558 ;;		Nothing
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text3
   565  007E8C                     __ptext3:
   566                           	opt stack 0
   567  007E8C                     ___awdiv:
   568                           	opt stack 30
   569                           
   570                           ;incstack = 0
   571  007E8C  6E05               	movwf	??___awdiv& (0+255),c
   572  007E8E  0E00               	movlw	0
   573  007E90  6E07               	movwf	___awdiv@sign,c
   574  007E92  5005               	movf	??___awdiv& (0+255),w,c
   575  007E94  5004               	movf	___awdiv@divisor+1,w,c
   576  007E96  0A80               	xorlw	128
   577  007E98  6EF3               	movwf	prodl,c
   578  007E9A  0E80               	movlw	128
   579  007E9C  5CF3               	subwf	prodl,w,c
   580  007E9E  0E00               	movlw	0
   581  007EA0  B4D8               	btfsc	status,2,c
   582  007EA2  5C03               	subwf	___awdiv@divisor,w,c
   583  007EA4  B0D8               	btfsc	status,0,c
   584  007EA6  D008               	goto	l656
   585  007EA8  6C03               	negf	___awdiv@divisor,c
   586  007EAA  1E04               	comf	___awdiv@divisor+1,f,c
   587  007EAC  B0D8               	btfsc	status,0,c
   588  007EAE  2A04               	incf	___awdiv@divisor+1,f,c
   589  007EB0  6E05               	movwf	??___awdiv& (0+255),c
   590  007EB2  0E01               	movlw	1
   591  007EB4  6E07               	movwf	___awdiv@sign,c
   592  007EB6  5005               	movf	??___awdiv& (0+255),w,c
   593  007EB8                     l656:
   594  007EB8  5002               	movf	___awdiv@dividend+1,w,c
   595  007EBA  0A80               	xorlw	128
   596  007EBC  6EF3               	movwf	prodl,c
   597  007EBE  0E80               	movlw	128
   598  007EC0  5CF3               	subwf	prodl,w,c
   599  007EC2  0E00               	movlw	0
   600  007EC4  B4D8               	btfsc	status,2,c
   601  007EC6  5C01               	subwf	___awdiv@dividend,w,c
   602  007EC8  B0D8               	btfsc	status,0,c
   603  007ECA  D006               	goto	l662
   604  007ECC  6C01               	negf	___awdiv@dividend,c
   605  007ECE  1E02               	comf	___awdiv@dividend+1,f,c
   606  007ED0  B0D8               	btfsc	status,0,c
   607  007ED2  2A02               	incf	___awdiv@dividend+1,f,c
   608  007ED4  0E01               	movlw	1
   609  007ED6  1A07               	xorwf	___awdiv@sign,f,c
   610  007ED8                     l662:
   611  007ED8  0E00               	movlw	0
   612  007EDA  6E09               	movwf	___awdiv@quotient+1,c
   613  007EDC  0E00               	movlw	0
   614  007EDE  6E08               	movwf	___awdiv@quotient,c
   615  007EE0  5004               	movf	___awdiv@divisor+1,w,c
   616  007EE2  1003               	iorwf	___awdiv@divisor,w,c
   617  007EE4  B4D8               	btfsc	status,2,c
   618  007EE6  D01E               	goto	l684
   619  007EE8  6E05               	movwf	??___awdiv& (0+255),c
   620  007EEA  0E01               	movlw	1
   621  007EEC  6E06               	movwf	___awdiv@counter,c
   622  007EEE  5005               	movf	??___awdiv& (0+255),w,c
   623  007EF0  D004               	goto	l670
   624  007EF2                     l668:
   625  007EF2  90D8               	bcf	status,0,c
   626  007EF4  3603               	rlcf	___awdiv@divisor,f,c
   627  007EF6  3604               	rlcf	___awdiv@divisor+1,f,c
   628  007EF8  2A06               	incf	___awdiv@counter,f,c
   629  007EFA                     l670:
   630  007EFA  AE04               	btfss	___awdiv@divisor+1,7,c
   631  007EFC  D7FA               	goto	l668
   632  007EFE                     l672:
   633  007EFE  90D8               	bcf	status,0,c
   634  007F00  3608               	rlcf	___awdiv@quotient,f,c
   635  007F02  3609               	rlcf	___awdiv@quotient+1,f,c
   636  007F04  5003               	movf	___awdiv@divisor,w,c
   637  007F06  5C01               	subwf	___awdiv@dividend,w,c
   638  007F08  5004               	movf	___awdiv@divisor+1,w,c
   639  007F0A  5802               	subwfb	___awdiv@dividend+1,w,c
   640  007F0C  A0D8               	btfss	status,0,c
   641  007F0E  D005               	goto	l680
   642  007F10  5003               	movf	___awdiv@divisor,w,c
   643  007F12  5E01               	subwf	___awdiv@dividend,f,c
   644  007F14  5004               	movf	___awdiv@divisor+1,w,c
   645  007F16  5A02               	subwfb	___awdiv@dividend+1,f,c
   646  007F18  8008               	bsf	___awdiv@quotient,0,c
   647  007F1A                     l680:
   648  007F1A  90D8               	bcf	status,0,c
   649  007F1C  3204               	rrcf	___awdiv@divisor+1,f,c
   650  007F1E  3203               	rrcf	___awdiv@divisor,f,c
   651  007F20  2E06               	decfsz	___awdiv@counter,f,c
   652  007F22  D7ED               	goto	l672
   653  007F24                     l684:
   654  007F24  5007               	movf	___awdiv@sign,w,c
   655  007F26  B4D8               	btfsc	status,2,c
   656  007F28  D004               	goto	l688
   657  007F2A  6C08               	negf	___awdiv@quotient,c
   658  007F2C  1E09               	comf	___awdiv@quotient+1,f,c
   659  007F2E  B0D8               	btfsc	status,0,c
   660  007F30  2A09               	incf	___awdiv@quotient+1,f,c
   661  007F32                     l688:
   662  007F32  C008  F001         	movff	___awdiv@quotient,?___awdiv
   663  007F36  C009  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   664  007F3A  0012               	return	
   665  007F3C                     __end_of___awdiv:
   666                           	opt stack 0
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           prodh	equ	0xFF4
   672                           prodl	equ	0xFF3
   673                           status	equ	0xFD8
   674                           tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           prodh	equ	0xFF4
   679                           prodl	equ	0xFF3
   680                           status	equ	0xFD8
   681                           
   682                           	psect	rparam
   683  0000                     tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           prodh	equ	0xFF4
   688                           prodl	equ	0xFF3
   689                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     759
                                              9 COMRAM     6     6      0
                            ___awdiv
                            ___awmod
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     2      2     113
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     263
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     263
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      F       F       1       15.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Oct 19 14:18:36 2016

                     l23 7F50             ___awdiv@sign 0007                      l700 7E1C  
                    l710 7E52                      l712 7E56                      l720 7E74  
                    l704 7E38                      l724 7E82                      l716 7E6A  
                    l708 7E4A                      l636 7DC0                      l670 7EFA  
                    l662 7ED8                      l646 7DDE                      l742 7F60  
                    l680 7F1A                      l672 7EFE                      l656 7EB8  
                    l668 7EF2                      l684 7F24                      l764 7FF6  
                    l688 7F32             ___awmod@sign 0007                     _LATA 000F89  
                   _LATB 000F8A                     _main 7F3C                     prodh 000FF4  
                   prodl 000FF3                     start 0800                    ?_main 0001  
        __end_of___awdiv 7F3C          __end_of___awmod 7E8C          ___awdiv@divisor 0003  
        ___awdiv@counter 0006                    _TRISB 000F93                    _delay 7DBE  
        __end_of_segData 080F                    main@i 000D                    tablat 000FF5  
                  status 000FD8          __initialization 7DB4             __end_of_main 8000  
                 ??_main 000A            __activetblptr 000002                   ?_delay 0001  
       ___awdiv@dividend 0001                ??___awdiv 0005                ??___awmod 0005  
                 delay@i 0003         ___awdiv@quotient 0008          ___awmod@divisor 0003  
        ___awmod@counter 0006             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7DB4           __pcstackCOMRAM 0001            __end_of_delay 7DF0  
                ??_delay 0003                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 7E8C                  ___awmod 7DF0             __psmallconst 0804  
                __pcinit 7DB4                  __ramtop 0800                  __ptext0 7F3C  
                __ptext1 7DBE                  __ptext2 7DF0                  __ptext3 7E8C  
                _segData 0805         ___awmod@dividend 0001     end_of_initialization 7DB4  
          __Lmediumconst 0000                _TRISAbits 000F92               main@digit1 000B  
             main@digit2 000C      start_initialization 7DB4                 ?___awdiv 0001  
               ?___awmod 0001              __smallconst 0804           __size_of_delay 0032  
              delay@time 0001                 _LATAbits 000F89                main@count 000F  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 00B0  
       __size_of___awmod 009C            __size_of_main 00C4  
