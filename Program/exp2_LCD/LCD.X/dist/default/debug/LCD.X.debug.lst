

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri May 19 11:05:42 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           	psect	idataCOMRAM
    18  007EC6                     __pidataCOMRAM:
    19                           	opt stack 0
    20                           
    21                           ;initializer for _String1
    22  007EC6  0805               	dw	STR_1& (0+65535)
    23                           
    24                           ;initializer for _String2
    25  007EC8  0814               	dw	STR_2& (0+65535)
    26  0000                     _ADCON1	set	4033
    27  0000                     _LATAbits	set	3977
    28  0000                     _LATB	set	3978
    29  0000                     _TRISAbits	set	3986
    30  0000                     _TRISB	set	3987
    31                           
    32                           	psect	smallconst
    33  000804                     __psmallconst:
    34                           	opt stack 0
    35  000804  00                 	db	0
    36  000805                     __stringdata:
    37                           	opt stack 0
    38  000805                     STR_1:
    39  000805  20                 	db	32
    40  000806  4D                 	db	77	;'M'
    41  000807  69                 	db	105	;'i'
    42  000808  63                 	db	99	;'c'
    43  000809  72                 	db	114	;'r'
    44  00080A  6F                 	db	111	;'o'
    45  00080B  45                 	db	69	;'E'
    46  00080C  6D                 	db	109	;'m'
    47  00080D  62                 	db	98	;'b'
    48  00080E  65                 	db	101	;'e'
    49  00080F  64                 	db	100	;'d'
    50  000810  64                 	db	100	;'d'
    51  000811  65                 	db	101	;'e'
    52  000812  64                 	db	100	;'d'
    53  000813  00                 	db	0
    54  000814                     STR_2:
    55  000814  20                 	db	32
    56  000815  50                 	db	80	;'P'
    57  000816  49                 	db	73	;'I'
    58  000817  43                 	db	67	;'C'
    59  000818  2D                 	db	45
    60  000819  31                 	db	49	;'1'
    61  00081A  38                 	db	56	;'8'
    62  00081B  46                 	db	70	;'F'
    63  00081C  20                 	db	32
    64  00081D  42                 	db	66	;'B'
    65  00081E  6F                 	db	111	;'o'
    66  00081F  61                 	db	97	;'a'
    67  000820  72                 	db	114	;'r'
    68  000821  64                 	db	100	;'d'
    69  000822  00                 	db	0
    70  000823                     __end_of__stringdata:
    71                           	opt stack 0
    72  000823  00                 	db	0	; dummy byte at the end
    73  0000                     
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77  007F1A                     __pcinit:
    78                           	opt stack 0
    79  007F1A                     start_initialization:
    80                           	opt stack 0
    81  007F1A                     __initialization:
    82                           	opt stack 0
    83                           
    84                           ; Initialize objects allocated to COMRAM (4 bytes)
    85                           ; load TBLPTR registers with __pidataCOMRAM
    86  007F1A  0EC6               	movlw	low __pidataCOMRAM
    87  007F1C  6EF6               	movwf	tblptrl,c
    88  007F1E  0E7E               	movlw	high __pidataCOMRAM
    89  007F20  6EF7               	movwf	tblptrh,c
    90  007F22  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    91  007F24  6EF8               	movwf	tblptru,c
    92  007F26  EE00  F008         	lfsr	0,__pdataCOMRAM
    93  007F2A  EE10 F004          	lfsr	1,4
    94  007F2E                     copy_data0:
    95  007F2E  0009               	tblrd		*+
    96  007F30  CFF5 FFEE          	movff	tablat,postinc0
    97  007F34  50E5               	movf	postdec1,w,c
    98  007F36  50E1               	movf	fsr1l,w,c
    99  007F38  E1FA               	bnz	copy_data0
   100  007F3A                     end_of_initialization:
   101                           	opt stack 0
   102  007F3A                     __end_of__initialization:
   103                           	opt stack 0
   104  007F3A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   105  007F3C  6EF8               	movwf	tblptru,c
   106  007F3E  0E08               	movlw	high __Lsmallconst
   107  007F40  6EF7               	movwf	tblptrh,c
   108  007F42  0100               	movlb	0
   109  007F44  EFBF  F03F         	goto	_main	;jump to C main() function
   110                           tblptru	equ	0xFF8
   111                           tblptrh	equ	0xFF7
   112                           tblptrl	equ	0xFF6
   113                           tablat	equ	0xFF5
   114                           postinc0	equ	0xFEE
   115                           postdec1	equ	0xFE5
   116                           fsr1l	equ	0xFE1
   117                           
   118                           	psect	dataCOMRAM
   119  000008                     __pdataCOMRAM:
   120                           	opt stack 0
   121  000008                     _String1:
   122                           	opt stack 0
   123  000008                     	ds	2
   124  00000A                     _String2:
   125                           	opt stack 0
   126  00000A                     	ds	2
   127                           tblptru	equ	0xFF8
   128                           tblptrh	equ	0xFF7
   129                           tblptrl	equ	0xFF6
   130                           tablat	equ	0xFF5
   131                           postinc0	equ	0xFEE
   132                           postdec1	equ	0xFE5
   133                           fsr1l	equ	0xFE1
   134                           
   135                           	psect	cstackCOMRAM
   136  000001                     __pcstackCOMRAM:
   137                           	opt stack 0
   138  000001                     lcd_delay@time:
   139                           	opt stack 0
   140                           
   141                           ; 2 bytes @ 0x0
   142  000001                     	ds	2
   143  000003                     lcd_delay@i:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x2
   147  000003                     	ds	2
   148  000005                     lcd_delay@j:
   149                           	opt stack 0
   150                           
   151                           ; 2 bytes @ 0x4
   152  000005                     	ds	2
   153  000007                     SendInstruction@command:
   154                           	opt stack 0
   155  000007                     SendData@lcddata:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x6
   159  000007                     	ds	1
   160  000008                     tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           tblptrl	equ	0xFF6
   163                           tablat	equ	0xFF5
   164                           postinc0	equ	0xFEE
   165                           postdec1	equ	0xFE5
   166                           fsr1l	equ	0xFE1
   167                           
   168                           ; 0 bytes @ 0x7
   169 ;;
   170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   171 ;;
   172 ;; *************** function _main *****************
   173 ;; Defined at:
   174 ;;		line 58 in file "lcd.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;		None               void
   181 ;; Registers used:
   182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   188 ;;      Params:         0       0       0       0       0       0       0       0       0
   189 ;;      Locals:         0       0       0       0       0       0       0       0       0
   190 ;;      Temps:          0       0       0       0       0       0       0       0       0
   191 ;;      Totals:         0       0       0       0       0       0       0       0       0
   192 ;;Total ram usage:        0 bytes
   193 ;; Hardware stack levels required when called:    2
   194 ;; This function calls:
   195 ;;		_SendData
   196 ;;		_SendInstruction
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203  007F7E                     __ptext0:
   204                           	opt stack 0
   205  007F7E                     _main:
   206                           	opt stack 29
   207                           
   208                           ;lcd.c: 60: ADCON1 = 0x0F;
   209                           
   210                           ;incstack = 0
   211  007F7E  0E0F               	movlw	15
   212  007F80  6EC1               	movwf	4033,c	;volatile
   213                           
   214                           ;lcd.c: 61: TRISB = 0x00;
   215  007F82  0E00               	movlw	0
   216  007F84  6E93               	movwf	3987,c	;volatile
   217                           
   218                           ;lcd.c: 62: TRISAbits.RA0 = 0;
   219  007F86  9092               	bcf	3986,0,c	;volatile
   220                           
   221                           ;lcd.c: 63: TRISAbits.RA1 = 0;
   222  007F88  9292               	bcf	3986,1,c	;volatile
   223                           
   224                           ;lcd.c: 65: SendInstruction(0x38);
   225  007F8A  0E38               	movlw	56
   226  007F8C  EC79  F03F         	call	_SendInstruction
   227                           
   228                           ;lcd.c: 66: SendInstruction(0x06);
   229  007F90  0E06               	movlw	6
   230  007F92  EC79  F03F         	call	_SendInstruction
   231                           
   232                           ;lcd.c: 67: SendInstruction(0x0C);
   233  007F96  0E0C               	movlw	12
   234  007F98  EC79  F03F         	call	_SendInstruction
   235                           
   236                           ;lcd.c: 68: SendInstruction(0x01);
   237  007F9C  0E01               	movlw	1
   238  007F9E  EC79  F03F         	call	_SendInstruction
   239                           
   240                           ;lcd.c: 69: SendInstruction(0x80);
   241  007FA2  0E80               	movlw	128
   242  007FA4  EC79  F03F         	call	_SendInstruction
   243                           
   244                           ;lcd.c: 71: while(*String1)
   245  007FA8  D00A               	goto	l703
   246  007FAA                     l699:
   247                           
   248                           ;lcd.c: 72: {
   249                           ;lcd.c: 73: SendData(*String1);
   250  007FAA  C008  FFF6         	movff	_String1,tblptrl
   251  007FAE  C009  FFF7         	movff	_String1+1,tblptrh
   252  007FB2  0008               	tblrd		*
   253  007FB4  50F5               	movf	tablat,w,c
   254  007FB6  EC65  F03F         	call	_SendData
   255                           
   256                           ;lcd.c: 74: String1++;
   257  007FBA  4A08               	infsnz	_String1,f,c
   258  007FBC  2A09               	incf	_String1+1,f,c
   259  007FBE                     l703:
   260  007FBE  C008  FFF6         	movff	_String1,tblptrl
   261  007FC2  C009  FFF7         	movff	_String1+1,tblptrh
   262  007FC6  0008               	tblrd		*
   263  007FC8  50F5               	movf	tablat,w,c
   264  007FCA  0900               	iorlw	0
   265  007FCC  A4D8               	btfss	status,2,c
   266  007FCE  D7ED               	goto	l699
   267                           
   268                           ;lcd.c: 75: }
   269                           ;lcd.c: 77: SendInstruction(0xC0);
   270  007FD0  0EC0               	movlw	192
   271  007FD2  EC79  F03F         	call	_SendInstruction
   272                           
   273                           ;lcd.c: 78: while(*String2)
   274  007FD6  D00A               	goto	l711
   275  007FD8                     l707:
   276                           
   277                           ;lcd.c: 79: {
   278                           ;lcd.c: 80: SendData(*String2);
   279  007FD8  C00A  FFF6         	movff	_String2,tblptrl
   280  007FDC  C00B  FFF7         	movff	_String2+1,tblptrh
   281  007FE0  0008               	tblrd		*
   282  007FE2  50F5               	movf	tablat,w,c
   283  007FE4  EC65  F03F         	call	_SendData
   284                           
   285                           ;lcd.c: 81: String2++;
   286  007FE8  4A0A               	infsnz	_String2,f,c
   287  007FEA  2A0B               	incf	_String2+1,f,c
   288  007FEC                     l711:
   289  007FEC  C00A  FFF6         	movff	_String2,tblptrl
   290  007FF0  C00B  FFF7         	movff	_String2+1,tblptrh
   291  007FF4  0008               	tblrd		*
   292  007FF6  50F5               	movf	tablat,w,c
   293  007FF8  0900               	iorlw	0
   294  007FFA  A4D8               	btfss	status,2,c
   295  007FFC  D7ED               	goto	l707
   296  007FFE                     l40:
   297  007FFE  D7FF               	goto	l40
   298  008000                     __end_of_main:
   299                           	opt stack 0
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           status	equ	0xFD8
   308                           
   309 ;; *************** function _SendInstruction *****************
   310 ;; Defined at:
   311 ;;		line 19 in file "lcd.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;  command         1    wreg     unsigned char 
   314 ;; Auto vars:     Size  Location     Type
   315 ;;  command         1    6[COMRAM] unsigned char 
   316 ;; Return value:  Size  Location     Type
   317 ;;		None               void
   318 ;; Registers used:
   319 ;;		wreg, status,2, status,0, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   325 ;;      Params:         0       0       0       0       0       0       0       0       0
   326 ;;      Locals:         1       0       0       0       0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0       0       0       0       0
   328 ;;      Totals:         1       0       0       0       0       0       0       0       0
   329 ;;Total ram usage:        1 bytes
   330 ;; Hardware stack levels used:    1
   331 ;; Hardware stack levels required when called:    1
   332 ;; This function calls:
   333 ;;		_lcd_delay
   334 ;; This function is called by:
   335 ;;		_main
   336 ;;		_InitLCD
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text1
   341  007EF2                     __ptext1:
   342                           	opt stack 0
   343  007EF2                     _SendInstruction:
   344                           	opt stack 29
   345                           
   346                           ;incstack = 0
   347                           ;SendInstruction@command stored from wreg
   348  007EF2  CFE8 F007          	movff	wreg,SendInstruction@command
   349                           
   350                           ;lcd.c: 21: LATAbits.LA0 = 0;
   351  007EF6  9089               	bcf	3977,0,c	;volatile
   352                           
   353                           ;lcd.c: 22: LATB = command;
   354  007EF8  C007  FF8A         	movff	SendInstruction@command,3978	;volatile
   355                           
   356                           ;lcd.c: 23: LATAbits.LA1 = 1;
   357  007EFC  8289               	bsf	3977,1,c	;volatile
   358                           
   359                           ;lcd.c: 24: lcd_delay(10);
   360  007EFE  0E00               	movlw	0
   361  007F00  6E02               	movwf	lcd_delay@time+1,c
   362  007F02  0E0A               	movlw	10
   363  007F04  6E01               	movwf	lcd_delay@time,c
   364  007F06  ECA4  F03F         	call	_lcd_delay	;wreg free
   365                           
   366                           ;lcd.c: 25: LATAbits.LA1 = 0;
   367  007F0A  9289               	bcf	3977,1,c	;volatile
   368                           
   369                           ;lcd.c: 26: lcd_delay(10);
   370  007F0C  0E00               	movlw	0
   371  007F0E  6E02               	movwf	lcd_delay@time+1,c
   372  007F10  0E0A               	movlw	10
   373  007F12  6E01               	movwf	lcd_delay@time,c
   374  007F14  ECA4  F03F         	call	_lcd_delay	;wreg free
   375  007F18  0012               	return	
   376  007F1A                     __end_of_SendInstruction:
   377                           	opt stack 0
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           postdec1	equ	0xFE5
   385                           fsr1l	equ	0xFE1
   386                           status	equ	0xFD8
   387                           
   388 ;; *************** function _SendData *****************
   389 ;; Defined at:
   390 ;;		line 29 in file "lcd.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;  lcddata         1    wreg     unsigned char 
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  lcddata         1    6[COMRAM] unsigned char 
   395 ;; Return value:  Size  Location     Type
   396 ;;		None               void
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   404 ;;      Params:         0       0       0       0       0       0       0       0       0
   405 ;;      Locals:         1       0       0       0       0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0       0       0       0       0
   407 ;;      Totals:         1       0       0       0       0       0       0       0       0
   408 ;;Total ram usage:        1 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; Hardware stack levels required when called:    1
   411 ;; This function calls:
   412 ;;		_lcd_delay
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text2
   419  007ECA                     __ptext2:
   420                           	opt stack 0
   421  007ECA                     _SendData:
   422                           	opt stack 29
   423                           
   424                           ;incstack = 0
   425                           ;SendData@lcddata stored from wreg
   426  007ECA  CFE8 F007          	movff	wreg,SendData@lcddata
   427                           
   428                           ;lcd.c: 31: LATAbits.LA0 = 1;
   429  007ECE  8089               	bsf	3977,0,c	;volatile
   430                           
   431                           ;lcd.c: 32: LATB = lcddata;
   432  007ED0  C007  FF8A         	movff	SendData@lcddata,3978	;volatile
   433                           
   434                           ;lcd.c: 33: LATAbits.LA1 = 1;
   435  007ED4  8289               	bsf	3977,1,c	;volatile
   436                           
   437                           ;lcd.c: 34: lcd_delay(10);
   438  007ED6  0E00               	movlw	0
   439  007ED8  6E02               	movwf	lcd_delay@time+1,c
   440  007EDA  0E0A               	movlw	10
   441  007EDC  6E01               	movwf	lcd_delay@time,c
   442  007EDE  ECA4  F03F         	call	_lcd_delay	;wreg free
   443                           
   444                           ;lcd.c: 35: LATAbits.LA1 = 0;
   445  007EE2  9289               	bcf	3977,1,c	;volatile
   446                           
   447                           ;lcd.c: 36: lcd_delay(10);
   448  007EE4  0E00               	movlw	0
   449  007EE6  6E02               	movwf	lcd_delay@time+1,c
   450  007EE8  0E0A               	movlw	10
   451  007EEA  6E01               	movwf	lcd_delay@time,c
   452  007EEC  ECA4  F03F         	call	_lcd_delay	;wreg free
   453  007EF0  0012               	return	
   454  007EF2                     __end_of_SendData:
   455                           	opt stack 0
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           postdec1	equ	0xFE5
   463                           fsr1l	equ	0xFE1
   464                           status	equ	0xFD8
   465                           
   466 ;; *************** function _lcd_delay *****************
   467 ;; Defined at:
   468 ;;		line 8 in file "lcd.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  time            2    0[COMRAM] unsigned int 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  j               2    4[COMRAM] unsigned int 
   473 ;;  i               2    2[COMRAM] unsigned int 
   474 ;; Return value:  Size  Location     Type
   475 ;;		None               void
   476 ;; Registers used:
   477 ;;		wreg, status,2, status,0
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   483 ;;      Params:         2       0       0       0       0       0       0       0       0
   484 ;;      Locals:         4       0       0       0       0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0       0       0       0       0
   486 ;;      Totals:         6       0       0       0       0       0       0       0       0
   487 ;;Total ram usage:        6 bytes
   488 ;; Hardware stack levels used:    1
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_SendInstruction
   493 ;;		_SendData
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text3
   498  007F48                     __ptext3:
   499                           	opt stack 0
   500  007F48                     _lcd_delay:
   501                           	opt stack 29
   502                           
   503                           ;lcd.c: 10: unsigned int i , j ;
   504                           ;lcd.c: 12: for(i = 0; i < time; i++)
   505                           
   506                           ;incstack = 0
   507  007F48  0E00               	movlw	0
   508  007F4A  6E04               	movwf	lcd_delay@i+1,c
   509  007F4C  0E00               	movlw	0
   510  007F4E  6E03               	movwf	lcd_delay@i,c
   511  007F50  D00F               	goto	l641
   512  007F52                     l629:
   513                           
   514                           ;lcd.c: 13: {
   515                           ;lcd.c: 14: for(j=0;j<100;j++);
   516  007F52  0E00               	movlw	0
   517  007F54  6E06               	movwf	lcd_delay@j+1,c
   518  007F56  0E00               	movlw	0
   519  007F58  6E05               	movwf	lcd_delay@j,c
   520  007F5A  0E64               	movlw	100
   521  007F5C  5C05               	subwf	lcd_delay@j,w,c
   522  007F5E  0E00               	movlw	0
   523  007F60  5806               	subwfb	lcd_delay@j+1,w,c
   524  007F62  B0D8               	btfsc	status,0,c
   525  007F64  D003               	goto	l639
   526  007F66  4A05               	infsnz	lcd_delay@j,f,c
   527  007F68  2A06               	incf	lcd_delay@j+1,f,c
   528  007F6A  D7F7               	goto	L1
   529  007F6C                     l639:
   530  007F6C  4A03               	infsnz	lcd_delay@i,f,c
   531  007F6E  2A04               	incf	lcd_delay@i+1,f,c
   532  007F70                     l641:
   533  007F70  5001               	movf	lcd_delay@time,w,c
   534  007F72  5C03               	subwf	lcd_delay@i,w,c
   535  007F74  5002               	movf	lcd_delay@time+1,w,c
   536  007F76  5804               	subwfb	lcd_delay@i+1,w,c
   537  007F78  B0D8               	btfsc	status,0,c
   538  007F7A  0012               	return	
   539  007F7C  D7EA               	goto	l629
   540  007F7E                     __end_of_lcd_delay:
   541                           	opt stack 0
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           postdec1	equ	0xFE5
   549                           fsr1l	equ	0xFE1
   550                           status	equ	0xFD8
   551                           tblptru	equ	0xFF8
   552                           tblptrh	equ	0xFF7
   553                           tblptrl	equ	0xFF6
   554                           tablat	equ	0xFF5
   555                           postinc0	equ	0xFEE
   556                           wreg	equ	0xFE8
   557                           postdec1	equ	0xFE5
   558                           fsr1l	equ	0xFE1
   559                           status	equ	0xFD8
   560                           
   561                           	psect	rparam
   562  0000                     tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           postdec1	equ	0xFE5
   569                           fsr1l	equ	0xFE1
   570                           status	equ	0xFD8


Data Sizes:
    Strings     30
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    String2	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    String1	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_SendData
    _main->_SendInstruction
    _SendInstruction->_lcd_delay
    _SendData->_lcd_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     494
                           _SendData
                    _SendInstruction
 ---------------------------------------------------------------------------------
 (1) _SendInstruction                                      1     1      0     247
                                              6 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _SendData                                             1     1      0     247
                                              6 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (2) _lcd_delay                                            6     4      2     232
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SendData
     _lcd_delay
   _SendInstruction
     _lcd_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7       B       1       11.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      20        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri May 19 11:05:42 2017

                      l40 7FFE                       l711 7FEC                       l703 7FBE  
                     l641 7F70                       l707 7FD8                       l629 7F52  
                     l639 7F6C                       l699 7FAA                       wreg 000FE8  
           lcd_delay@time 0001                      STR_1 0805                      STR_2 0814  
                    _LATB 000F8A                      _main 7F7E                      fsr1l 000FE1  
                    start 0800                     ?_main 0001                     _TRISB 000F93  
                   tablat 000FF5                     status 000FD8           __initialization 7F1A  
            __end_of_main 8000          __end_of_SendData 7EF2                    ??_main 0008  
           __activetblptr 000001                    _ADCON1 000FC1  __size_of_SendInstruction 0028  
            __pdataCOMRAM 0008              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                __accesstop 0060  
 __end_of__initialization 7F3A            __pcstackCOMRAM 0001        __size_of_lcd_delay 0036  
               ?_SendData 0001         ??_SendInstruction 0007                ??_SendData 0007  
                 __Hparam 0000                   __Lparam 0000         __end_of_lcd_delay 7F7E  
                 _String1 0008                   _String2 000A              __psmallconst 0804  
                 __pcinit 7F1A                   __ramtop 0800                   __ptext0 7F7E  
                 __ptext1 7EF2                   __ptext2 7ECA                   __ptext3 7F48  
    end_of_initialization 7F3A                   postdec1 000FE5                   postinc0 000FEE  
               _TRISAbits 000F92                lcd_delay@i 0003                lcd_delay@j 0005  
           __pidataCOMRAM 7EC6       start_initialization 7F1A           _SendInstruction 7EF2  
       __size_of_SendData 0028       __end_of__stringdata 0823           SendData@lcddata 0007  
  SendInstruction@command 0007                 _lcd_delay 7F48               __smallconst 0804  
 __end_of_SendInstruction 7F1A                  _LATAbits 000F89                ?_lcd_delay 0001  
             __stringdata 0805                 copy_data0 7F2E                  _SendData 7ECA  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0804  
        ?_SendInstruction 0001             __size_of_main 0082               ??_lcd_delay 0003  
