

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Jun 13 16:21:38 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           	psect	smallconst
    18  000804                     __psmallconst:
    19                           	opt stack 0
    20  000804  00                 	db	0
    21  000805                     _KeyLookupTbl:
    22                           	opt stack 0
    23  000805  31                 	db	49
    24  000806  34                 	db	52
    25  000807  37                 	db	55
    26  000808  2E                 	db	46
    27  000809  32                 	db	50
    28  00080A  35                 	db	53
    29  00080B  38                 	db	56
    30  00080C  30                 	db	48
    31  00080D  33                 	db	51
    32  00080E  36                 	db	54
    33  00080F  39                 	db	57
    34  000810  23                 	db	35
    35  000811  41                 	db	65
    36  000812  42                 	db	66
    37  000813  43                 	db	67
    38  000814  44                 	db	68
    39  000815                     __end_of_KeyLookupTbl:
    40                           	opt stack 0
    41  0000                     _ADCON1	set	4033
    42  0000                     _LATAbits	set	3977
    43  0000                     _LATB	set	3978
    44  0000                     _LATD	set	3980
    45  0000                     _PORTD	set	3971
    46  0000                     _TRISAbits	set	3986
    47  0000                     _TRISB	set	3987
    48  0000                     _TRISD	set	3989
    49  000815                     __stringdata:
    50                           	opt stack 0
    51  000815                     STR_1:
    52  000815  4B                 	db	75	;'K'
    53  000816  65                 	db	101	;'e'
    54  000817  79                 	db	121	;'y'
    55  000818  20                 	db	32
    56  000819  50                 	db	80	;'P'
    57  00081A  72                 	db	114	;'r'
    58  00081B  65                 	db	101	;'e'
    59  00081C  73                 	db	115	;'s'
    60  00081D  73                 	db	115	;'s'
    61  00081E  65                 	db	101	;'e'
    62  00081F  64                 	db	100	;'d'
    63  000820  20                 	db	32
    64  000821  3D                 	db	61	;'='
    65  000822  20                 	db	32
    66  000823  00                 	db	0
    67  000824                     __end_of__stringdata:
    68                           	opt stack 0
    69  000824  00                 	db	0	; dummy byte at the end
    70  0000                     
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74  007E66                     __pcinit:
    75                           	opt stack 0
    76  007E66                     start_initialization:
    77                           	opt stack 0
    78  007E66                     __initialization:
    79                           	opt stack 0
    80  007E66                     end_of_initialization:
    81                           	opt stack 0
    82  007E66                     __end_of__initialization:
    83                           	opt stack 0
    84  007E66  0E00               	movlw	low (__Lmediumconst shr (0+16))
    85  007E68  6EF8               	movwf	tblptru,c
    86  007E6A  0100               	movlb	0
    87  007E6C  EF91  F03F         	goto	_main	;jump to C main() function
    88                           tblptru	equ	0xFF8
    89                           
    90                           	psect	cstackCOMRAM
    91  000001                     __pcstackCOMRAM:
    92                           	opt stack 0
    93  000001                     lcd_delay@time:
    94                           	opt stack 0
    95                           
    96                           ; 2 bytes @ 0x0
    97  000001                     	ds	2
    98  000003                     lcd_delay@i:
    99                           	opt stack 0
   100                           
   101                           ; 2 bytes @ 0x2
   102  000003                     	ds	2
   103  000005                     lcd_delay@j:
   104                           	opt stack 0
   105                           
   106                           ; 2 bytes @ 0x4
   107  000005                     	ds	2
   108  000007                     ??_ReadKey:
   109  000007                     SendInstruction@command:
   110                           	opt stack 0
   111  000007                     SendData@lcddata:
   112                           	opt stack 0
   113                           
   114                           ; 1 bytes @ 0x6
   115  000007                     	ds	1
   116  000008                     ReadKey@row:
   117                           	opt stack 0
   118                           
   119                           ; 1 bytes @ 0x7
   120  000008                     	ds	1
   121  000009                     ReadKey@val:
   122                           	opt stack 0
   123                           
   124                           ; 1 bytes @ 0x8
   125  000009                     	ds	1
   126  00000A                     ReadKey@key:
   127                           	opt stack 0
   128                           
   129                           ; 1 bytes @ 0x9
   130  00000A                     	ds	1
   131  00000B                     ReadKey@i:
   132                           	opt stack 0
   133                           
   134                           ; 1 bytes @ 0xA
   135  00000B                     	ds	1
   136  00000C                     ReadKey@j:
   137                           	opt stack 0
   138                           
   139                           ; 1 bytes @ 0xB
   140  00000C                     	ds	1
   141  00000D                     main@Key:
   142                           	opt stack 0
   143                           
   144                           ; 1 bytes @ 0xC
   145  00000D                     	ds	1
   146  00000E                     main@string1:
   147                           	opt stack 0
   148                           
   149                           ; 2 bytes @ 0xD
   150  00000E                     	ds	2
   151                           tblptru	equ	0xFF8
   152                           
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 87 in file "keypad.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;  str            16    0        unsigned char [16]
   163 ;;  string1         2   13[COMRAM] PTR unsigned char 
   164 ;;		 -> STR_1(15), 
   165 ;;  Key             1   12[COMRAM] unsigned char 
   166 ;; Return value:  Size  Location     Type
   167 ;;		None               void
   168 ;; Registers used:
   169 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   170 ;; Tracked objects:
   171 ;;		On entry : 0/0
   172 ;;		On exit  : 0/0
   173 ;;		Unchanged: 0/0
   174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   175 ;;      Params:         0       0       0       0       0       0       0       0       0
   176 ;;      Locals:         3       0       0       0       0       0       0       0       0
   177 ;;      Temps:          0       0       0       0       0       0       0       0       0
   178 ;;      Totals:         3       0       0       0       0       0       0       0       0
   179 ;;Total ram usage:        3 bytes
   180 ;; Hardware stack levels required when called:    3
   181 ;; This function calls:
   182 ;;		_InitLCD
   183 ;;		_ReadKey
   184 ;;		_SendData
   185 ;;		_SendInstruction
   186 ;;		_lcd_delay
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           	psect	text0
   193  007F22                     __ptext0:
   194                           	opt stack 0
   195  007F22                     _main:
   196                           	opt stack 28
   197                           
   198                           ;keypad.c: 89: unsigned char Key, str[16];
   199                           ;keypad.c: 90: unsigned char *string1 = "Key Pressed = ";
   200                           
   201                           ;incstack = 0
   202  007F22  0E08               	movlw	high STR_1
   203  007F24  6E0F               	movwf	main@string1+1,c
   204  007F26  0E15               	movlw	low STR_1
   205  007F28  6E0E               	movwf	main@string1,c
   206                           
   207                           ;keypad.c: 92: TRISD = 0xF0;
   208  007F2A  0EF0               	movlw	240
   209  007F2C  6E95               	movwf	3989,c	;volatile
   210                           
   211                           ;keypad.c: 93: LATD = 0xFF;
   212  007F2E  688C               	setf	3980,c	;volatile
   213                           
   214                           ;keypad.c: 95: InitLCD();
   215  007F30  EC60  F03F         	call	_InitLCD	;wreg free
   216                           
   217                           ;keypad.c: 96: SendInstruction(0x80);
   218  007F34  0E80               	movlw	128
   219  007F36  EC38  F03F         	call	_SendInstruction
   220                           
   221                           ;keypad.c: 97: while(*string1)
   222  007F3A  D00A               	goto	l748
   223  007F3C                     l744:
   224                           
   225                           ;keypad.c: 98: SendData(*string1++);
   226  007F3C  C00E  FFF6         	movff	main@string1,tblptrl
   227  007F40  C00F  FFF7         	movff	main@string1+1,tblptrh
   228  007F44  0008               	tblrd		*
   229  007F46  50F5               	movf	tablat,w,c
   230  007F48  EC4C  F03F         	call	_SendData
   231  007F4C  4A0E               	infsnz	main@string1,f,c
   232  007F4E  2A0F               	incf	main@string1+1,f,c
   233  007F50                     l748:
   234  007F50  C00E  FFF6         	movff	main@string1,tblptrl
   235  007F54  C00F  FFF7         	movff	main@string1+1,tblptrh
   236  007F58  0008               	tblrd		*
   237  007F5A  50F5               	movf	tablat,w,c
   238  007F5C  0900               	iorlw	0
   239  007F5E  A4D8               	btfss	status,2,c
   240  007F60  D7ED               	goto	l744
   241  007F62                     l750:
   242                           
   243                           ;keypad.c: 102: {
   244                           ;keypad.c: 103: Key = ReadKey();
   245  007F62  ECC1  F03F         	call	_ReadKey	;wreg free
   246  007F66  6E0D               	movwf	main@Key,c
   247                           
   248                           ;keypad.c: 104: SendInstruction(0xC0);
   249  007F68  0EC0               	movlw	192
   250  007F6A  EC38  F03F         	call	_SendInstruction
   251                           
   252                           ;keypad.c: 105: SendData(Key);
   253  007F6E  500D               	movf	main@Key,w,c
   254  007F70  EC4C  F03F         	call	_SendData
   255                           
   256                           ;keypad.c: 106: lcd_delay(100);
   257  007F74  0E00               	movlw	0
   258  007F76  6E02               	movwf	lcd_delay@time+1,c
   259  007F78  0E64               	movlw	100
   260  007F7A  6E01               	movwf	lcd_delay@time,c
   261  007F7C  EC76  F03F         	call	_lcd_delay	;wreg free
   262  007F80  D7F0               	goto	l750
   263  007F82                     __end_of_main:
   264                           	opt stack 0
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           status	equ	0xFD8
   270                           
   271 ;; *************** function _SendData *****************
   272 ;; Defined at:
   273 ;;		line 32 in file "keypad.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;  lcddata         1    wreg     unsigned char 
   276 ;; Auto vars:     Size  Location     Type
   277 ;;  lcddata         1    6[COMRAM] unsigned char 
   278 ;; Return value:  Size  Location     Type
   279 ;;		None               void
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   287 ;;      Params:         0       0       0       0       0       0       0       0       0
   288 ;;      Locals:         1       0       0       0       0       0       0       0       0
   289 ;;      Temps:          0       0       0       0       0       0       0       0       0
   290 ;;      Totals:         1       0       0       0       0       0       0       0       0
   291 ;;Total ram usage:        1 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; Hardware stack levels required when called:    1
   294 ;; This function calls:
   295 ;;		_lcd_delay
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           	psect	text1
   302  007E98                     __ptext1:
   303                           	opt stack 0
   304  007E98                     _SendData:
   305                           	opt stack 29
   306                           
   307                           ;incstack = 0
   308                           ;SendData@lcddata stored from wreg
   309  007E98  CFE8 F007          	movff	wreg,SendData@lcddata
   310                           
   311                           ;keypad.c: 34: LATAbits.LA0 = 1;
   312  007E9C  8089               	bsf	3977,0,c	;volatile
   313                           
   314                           ;keypad.c: 35: LATB = lcddata;
   315  007E9E  C007  FF8A         	movff	SendData@lcddata,3978	;volatile
   316                           
   317                           ;keypad.c: 36: LATAbits.LA1 = 1;
   318  007EA2  8289               	bsf	3977,1,c	;volatile
   319                           
   320                           ;keypad.c: 37: lcd_delay(10);
   321  007EA4  0E00               	movlw	0
   322  007EA6  6E02               	movwf	lcd_delay@time+1,c
   323  007EA8  0E0A               	movlw	10
   324  007EAA  6E01               	movwf	lcd_delay@time,c
   325  007EAC  EC76  F03F         	call	_lcd_delay	;wreg free
   326                           
   327                           ;keypad.c: 38: LATAbits.LA1 = 0;
   328  007EB0  9289               	bcf	3977,1,c	;volatile
   329                           
   330                           ;keypad.c: 39: lcd_delay(10);
   331  007EB2  0E00               	movlw	0
   332  007EB4  6E02               	movwf	lcd_delay@time+1,c
   333  007EB6  0E0A               	movlw	10
   334  007EB8  6E01               	movwf	lcd_delay@time,c
   335  007EBA  EC76  F03F         	call	_lcd_delay	;wreg free
   336  007EBE  0012               	return	
   337  007EC0                     __end_of_SendData:
   338                           	opt stack 0
   339                           tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           tblptrl	equ	0xFF6
   342                           tablat	equ	0xFF5
   343                           wreg	equ	0xFE8
   344                           status	equ	0xFD8
   345                           
   346 ;; *************** function _ReadKey *****************
   347 ;; Defined at:
   348 ;;		line 60 in file "keypad.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  j               1   11[COMRAM] unsigned char 
   353 ;;  i               1   10[COMRAM] unsigned char 
   354 ;;  key             1    9[COMRAM] unsigned char 
   355 ;;  val             1    8[COMRAM] unsigned char 
   356 ;;  row             1    7[COMRAM] unsigned char 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      unsigned char 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   366 ;;      Params:         0       0       0       0       0       0       0       0       0
   367 ;;      Locals:         5       0       0       0       0       0       0       0       0
   368 ;;      Temps:          1       0       0       0       0       0       0       0       0
   369 ;;      Totals:         6       0       0       0       0       0       0       0       0
   370 ;;Total ram usage:        6 bytes
   371 ;; Hardware stack levels used:    1
   372 ;; Hardware stack levels required when called:    1
   373 ;; This function calls:
   374 ;;		_lcd_delay
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text2
   381  007F82                     __ptext2:
   382                           	opt stack 0
   383  007F82                     _ReadKey:
   384                           	opt stack 29
   385                           
   386                           ;keypad.c: 62: unsigned char row,val, i, j, key=0;
   387                           
   388                           ;incstack = 0
   389  007F82  6E07               	movwf	??_ReadKey& (0+255),c
   390  007F84  0E00               	movlw	0
   391  007F86  6E0A               	movwf	ReadKey@key,c
   392  007F88  5007               	movf	??_ReadKey& (0+255),w,c
   393  007F8A                     l682:
   394                           
   395                           ;keypad.c: 65: {
   396                           ;keypad.c: 66: LATD = 0xFF;
   397  007F8A  688C               	setf	3980,c	;volatile
   398                           
   399                           ;keypad.c: 67: for(i=0x01;i<0x10;i=i<<1)
   400  007F8C  6E07               	movwf	??_ReadKey& (0+255),c
   401  007F8E  0E01               	movlw	1
   402  007F90  6E0B               	movwf	ReadKey@i,c
   403  007F92  5007               	movf	??_ReadKey& (0+255),w,c
   404  007F94  0E0F               	movlw	15
   405  007F96  640B               	cpfsgt	ReadKey@i,c
   406  007F98  D001               	goto	l688
   407  007F9A  D7F7               	goto	l682
   408  007F9C                     l688:
   409                           
   410                           ;keypad.c: 68: {
   411                           ;keypad.c: 69: LATD = ~i;
   412  007F9C  500B               	movf	ReadKey@i,w,c
   413  007F9E  0AFF               	xorlw	255
   414  007FA0  6E8C               	movwf	3980,c	;volatile
   415                           
   416                           ;keypad.c: 70: lcd_delay(2);
   417  007FA2  0E00               	movlw	0
   418  007FA4  6E02               	movwf	lcd_delay@time+1,c
   419  007FA6  0E02               	movlw	2
   420  007FA8  6E01               	movwf	lcd_delay@time,c
   421  007FAA  EC76  F03F         	call	_lcd_delay	;wreg free
   422                           
   423                           ;keypad.c: 71: row = PORTD>>4;
   424  007FAE  3883               	swapf	3971,w,c	;volatile
   425  007FB0  0B0F               	andlw	15
   426  007FB2  6E08               	movwf	ReadKey@row,c
   427                           
   428                           ;keypad.c: 72: for(j=0x01;j<0x10;j=j<<1)
   429  007FB4  6E07               	movwf	??_ReadKey& (0+255),c
   430  007FB6  0E01               	movlw	1
   431  007FB8  6E0C               	movwf	ReadKey@j,c
   432  007FBA  5007               	movf	??_ReadKey& (0+255),w,c
   433  007FBC  D016               	goto	L1
   434  007FBE                     l700:
   435                           
   436                           ;keypad.c: 73: {
   437                           ;keypad.c: 74: if((row & j) == 0)
   438  007FBE  5008               	movf	ReadKey@row,w,c
   439  007FC0  140C               	andwf	ReadKey@j,w,c
   440  007FC2  0900               	iorlw	0
   441  007FC4  A4D8               	btfss	status,2,c
   442  007FC6  D00D               	goto	l710
   443                           
   444                           ;keypad.c: 75: {
   445                           ;keypad.c: 76: val = KeyLookupTbl[key];
   446  007FC8  500A               	movf	ReadKey@key,w,c
   447  007FCA  0D01               	mullw	1
   448  007FCC  0E05               	movlw	low _KeyLookupTbl
   449  007FCE  24F3               	addwf	prodl,w,c
   450  007FD0  6EF6               	movwf	tblptrl,c
   451  007FD2  0E08               	movlw	high _KeyLookupTbl
   452  007FD4  20F4               	addwfc	prodh,w,c
   453  007FD6  6EF7               	movwf	tblptrh,c
   454  007FD8  0008               	tblrd		*
   455  007FDA  CFF5 F009          	movff	tablat,ReadKey@val
   456                           
   457                           ;keypad.c: 77: return val;
   458  007FDE  5009               	movf	ReadKey@val,w,c
   459  007FE0  D00E               	goto	l44
   460  007FE2                     l710:
   461                           
   462                           ;keypad.c: 79: else
   463                           ;keypad.c: 80: key++;
   464  007FE2  2A0A               	incf	ReadKey@key,f,c
   465  007FE4  500C               	movf	ReadKey@j,w,c
   466  007FE6  240C               	addwf	ReadKey@j,w,c
   467  007FE8  6E0C               	movwf	ReadKey@j,c
   468  007FEA                     L1:
   469  007FEA  0E0F               	movlw	15
   470  007FEC  640C               	cpfsgt	ReadKey@j,c
   471  007FEE  D7E7               	goto	l700
   472  007FF0  500B               	movf	ReadKey@i,w,c
   473  007FF2  240B               	addwf	ReadKey@i,w,c
   474  007FF4  6E0B               	movwf	ReadKey@i,c
   475  007FF6  0E0F               	movlw	15
   476  007FF8  640B               	cpfsgt	ReadKey@i,c
   477  007FFA  D7D0               	goto	l688
   478  007FFC  D7C6               	goto	l682
   479  007FFE                     l44:
   480  007FFE  0012               	return	
   481  008000                     __end_of_ReadKey:
   482                           	opt stack 0
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           prodh	equ	0xFF4
   488                           prodl	equ	0xFF3
   489                           wreg	equ	0xFE8
   490                           status	equ	0xFD8
   491                           
   492 ;; *************** function _InitLCD *****************
   493 ;; Defined at:
   494 ;;		line 42 in file "keypad.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;		None               void
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   508 ;;      Params:         0       0       0       0       0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0       0       0       0       0
   511 ;;      Totals:         0       0       0       0       0       0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels used:    1
   514 ;; Hardware stack levels required when called:    2
   515 ;; This function calls:
   516 ;;		_SendInstruction
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text3
   523  007EC0                     __ptext3:
   524                           	opt stack 0
   525  007EC0                     _InitLCD:
   526                           	opt stack 28
   527                           
   528                           ;keypad.c: 44: ADCON1 = 0x0F;
   529                           
   530                           ;incstack = 0
   531  007EC0  0E0F               	movlw	15
   532  007EC2  6EC1               	movwf	4033,c	;volatile
   533                           
   534                           ;keypad.c: 45: TRISB = 0x00;
   535  007EC4  0E00               	movlw	0
   536  007EC6  6E93               	movwf	3987,c	;volatile
   537                           
   538                           ;keypad.c: 46: TRISAbits.RA0 = 0;
   539  007EC8  9092               	bcf	3986,0,c	;volatile
   540                           
   541                           ;keypad.c: 47: TRISAbits.RA1 = 0;
   542  007ECA  9292               	bcf	3986,1,c	;volatile
   543                           
   544                           ;keypad.c: 49: SendInstruction(0x38);
   545  007ECC  0E38               	movlw	56
   546  007ECE  EC38  F03F         	call	_SendInstruction
   547                           
   548                           ;keypad.c: 50: SendInstruction(0x06);
   549  007ED2  0E06               	movlw	6
   550  007ED4  EC38  F03F         	call	_SendInstruction
   551                           
   552                           ;keypad.c: 51: SendInstruction(0x0C);
   553  007ED8  0E0C               	movlw	12
   554  007EDA  EC38  F03F         	call	_SendInstruction
   555                           
   556                           ;keypad.c: 52: SendInstruction(0x01);
   557  007EDE  0E01               	movlw	1
   558  007EE0  EC38  F03F         	call	_SendInstruction
   559                           
   560                           ;keypad.c: 53: SendInstruction(0x80);
   561  007EE4  0E80               	movlw	128
   562  007EE6  EC38  F03F         	call	_SendInstruction
   563  007EEA  0012               	return	
   564  007EEC                     __end_of_InitLCD:
   565                           	opt stack 0
   566                           tblptru	equ	0xFF8
   567                           tblptrh	equ	0xFF7
   568                           tblptrl	equ	0xFF6
   569                           tablat	equ	0xFF5
   570                           prodh	equ	0xFF4
   571                           prodl	equ	0xFF3
   572                           wreg	equ	0xFE8
   573                           status	equ	0xFD8
   574                           
   575 ;; *************** function _SendInstruction *****************
   576 ;; Defined at:
   577 ;;		line 22 in file "keypad.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  command         1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  command         1    6[COMRAM] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;		None               void
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   591 ;;      Params:         0       0       0       0       0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0
   594 ;;      Totals:         1       0       0       0       0       0       0       0       0
   595 ;;Total ram usage:        1 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    1
   598 ;; This function calls:
   599 ;;		_lcd_delay
   600 ;; This function is called by:
   601 ;;		_InitLCD
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text4
   607  007E70                     __ptext4:
   608                           	opt stack 0
   609  007E70                     _SendInstruction:
   610                           	opt stack 29
   611                           
   612                           ;incstack = 0
   613                           ;SendInstruction@command stored from wreg
   614  007E70  CFE8 F007          	movff	wreg,SendInstruction@command
   615                           
   616                           ;keypad.c: 24: LATAbits.LA0 = 0;
   617  007E74  9089               	bcf	3977,0,c	;volatile
   618                           
   619                           ;keypad.c: 25: LATB = command;
   620  007E76  C007  FF8A         	movff	SendInstruction@command,3978	;volatile
   621                           
   622                           ;keypad.c: 26: LATAbits.LA1 = 1;
   623  007E7A  8289               	bsf	3977,1,c	;volatile
   624                           
   625                           ;keypad.c: 27: lcd_delay(10);
   626  007E7C  0E00               	movlw	0
   627  007E7E  6E02               	movwf	lcd_delay@time+1,c
   628  007E80  0E0A               	movlw	10
   629  007E82  6E01               	movwf	lcd_delay@time,c
   630  007E84  EC76  F03F         	call	_lcd_delay	;wreg free
   631                           
   632                           ;keypad.c: 28: LATAbits.LA1 = 0;
   633  007E88  9289               	bcf	3977,1,c	;volatile
   634                           
   635                           ;keypad.c: 29: lcd_delay(10);
   636  007E8A  0E00               	movlw	0
   637  007E8C  6E02               	movwf	lcd_delay@time+1,c
   638  007E8E  0E0A               	movlw	10
   639  007E90  6E01               	movwf	lcd_delay@time,c
   640  007E92  EC76  F03F         	call	_lcd_delay	;wreg free
   641  007E96  0012               	return	
   642  007E98                     __end_of_SendInstruction:
   643                           	opt stack 0
   644                           tblptru	equ	0xFF8
   645                           tblptrh	equ	0xFF7
   646                           tblptrl	equ	0xFF6
   647                           tablat	equ	0xFF5
   648                           prodh	equ	0xFF4
   649                           prodl	equ	0xFF3
   650                           wreg	equ	0xFE8
   651                           status	equ	0xFD8
   652                           
   653 ;; *************** function _lcd_delay *****************
   654 ;; Defined at:
   655 ;;		line 11 in file "keypad.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;  time            2    0[COMRAM] unsigned int 
   658 ;; Auto vars:     Size  Location     Type
   659 ;;  j               2    4[COMRAM] unsigned int 
   660 ;;  i               2    2[COMRAM] unsigned int 
   661 ;; Return value:  Size  Location     Type
   662 ;;		None               void
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   670 ;;      Params:         2       0       0       0       0       0       0       0       0
   671 ;;      Locals:         4       0       0       0       0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0       0       0       0       0
   673 ;;      Totals:         6       0       0       0       0       0       0       0       0
   674 ;;Total ram usage:        6 bytes
   675 ;; Hardware stack levels used:    1
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_SendInstruction
   680 ;;		_SendData
   681 ;;		_ReadKey
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text5
   687  007EEC                     __ptext5:
   688                           	opt stack 0
   689  007EEC                     _lcd_delay:
   690                           	opt stack 30
   691                           
   692                           ;keypad.c: 13: unsigned int i , j ;
   693                           ;keypad.c: 15: for(i = 0; i < time; i++)
   694                           
   695                           ;incstack = 0
   696  007EEC  0E00               	movlw	0
   697  007EEE  6E04               	movwf	lcd_delay@i+1,c
   698  007EF0  0E00               	movlw	0
   699  007EF2  6E03               	movwf	lcd_delay@i,c
   700  007EF4  D00F               	goto	l654
   701  007EF6                     l642:
   702                           
   703                           ;keypad.c: 16: {
   704                           ;keypad.c: 17: for(j=0;j<50;j++);
   705  007EF6  0E00               	movlw	0
   706  007EF8  6E06               	movwf	lcd_delay@j+1,c
   707  007EFA  0E00               	movlw	0
   708  007EFC  6E05               	movwf	lcd_delay@j,c
   709  007EFE  0E32               	movlw	50
   710  007F00  5C05               	subwf	lcd_delay@j,w,c
   711  007F02  0E00               	movlw	0
   712  007F04  5806               	subwfb	lcd_delay@j+1,w,c
   713  007F06  B0D8               	btfsc	status,0,c
   714  007F08  D003               	goto	l652
   715  007F0A  4A05               	infsnz	lcd_delay@j,f,c
   716  007F0C  2A06               	incf	lcd_delay@j+1,f,c
   717  007F0E  D7F7               	goto	L2
   718  007F10                     l652:
   719  007F10  4A03               	infsnz	lcd_delay@i,f,c
   720  007F12  2A04               	incf	lcd_delay@i+1,f,c
   721  007F14                     l654:
   722  007F14  5001               	movf	lcd_delay@time,w,c
   723  007F16  5C03               	subwf	lcd_delay@i,w,c
   724  007F18  5002               	movf	lcd_delay@time+1,w,c
   725  007F1A  5804               	subwfb	lcd_delay@i+1,w,c
   726  007F1C  B0D8               	btfsc	status,0,c
   727  007F1E  0012               	return	
   728  007F20  D7EA               	goto	l642
   729  007F22                     __end_of_lcd_delay:
   730                           	opt stack 0
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           prodh	equ	0xFF4
   736                           prodl	equ	0xFF3
   737                           wreg	equ	0xFE8
   738                           status	equ	0xFD8
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           prodh	equ	0xFF4
   744                           prodl	equ	0xFF3
   745                           wreg	equ	0xFE8
   746                           status	equ	0xFD8
   747                           
   748                           	psect	rparam
   749  0000                     tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           prodh	equ	0xFF4
   754                           prodl	equ	0xFF3
   755                           wreg	equ	0xFE8
   756                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    16
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    main@string1	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_ReadKey
    _SendData->_lcd_delay
    _ReadKey->_lcd_delay
    _InitLCD->_SendInstruction
    _SendInstruction->_lcd_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    1845
                                             12 COMRAM     3     3      0
                            _InitLCD
                            _ReadKey
                           _SendData
                    _SendInstruction
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _SendData                                             1     1      0     333
                                              6 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _ReadKey                                              6     6      0     483
                                              6 COMRAM     6     6      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0     333
                    _SendInstruction
 ---------------------------------------------------------------------------------
 (1) _SendInstruction                                      1     1      0     333
                                              6 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _lcd_delay                                            6     4      2     318
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitLCD
     _SendInstruction
       _lcd_delay
   _ReadKey
     _lcd_delay
   _SendData
     _lcd_delay
   _SendInstruction
     _lcd_delay
   _lcd_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      F       F       1       15.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Jun 13 16:21:38 2016

                      l44 7FFE                       l700 7FBE                       l710 7FE2  
                     l642 7EF6                       l652 7F10                       l654 7F14  
                     l750 7F62                       l744 7F3C                       l682 7F8A  
                     l748 7F50                       l688 7F9C                       wreg 000FE8  
           lcd_delay@time 0001                      STR_1 0815                      _LATB 000F8A  
                    _LATD 000F8C                ReadKey@key 000A                ReadKey@val 0009  
                    _main 7F22                ReadKey@row 0008                      prodh 000FF4  
                    prodl 000FF3                      start 0800               main@string1 000E  
         __end_of_InitLCD 7EEC           __end_of_ReadKey 8000                     ?_main 0001  
                   _PORTD 000F83                     _TRISB 000F93                     _TRISD 000F95  
                   tablat 000FF5                     status 000FD8           __initialization 7E66  
            __end_of_main 7F82          __end_of_SendData 7EC0                    ??_main 000D  
           __activetblptr 000002                    _ADCON1 000FC1                 ??_InitLCD 0008  
               ??_ReadKey 0007  __size_of_SendInstruction 0028              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 7E66      __end_of_KeyLookupTbl 0815  
          __pcstackCOMRAM 0001        __size_of_lcd_delay 0036                 ?_SendData 0001  
       ??_SendInstruction 0007                   _InitLCD 7EC0                ??_SendData 0007  
                 _ReadKey 7F82                   __Hparam 0000                   __Lparam 0000  
       __end_of_lcd_delay 7F22              __psmallconst 0804                   __pcinit 7E66  
                 __ramtop 0800                   __ptext0 7F22                   __ptext1 7E98  
                 __ptext2 7F82                   __ptext3 7EC0                   __ptext4 7E70  
                 __ptext5 7EEC                   main@Key 000D      end_of_initialization 7E66  
           __Lmediumconst 0000              _KeyLookupTbl 0805                 _TRISAbits 000F92  
              lcd_delay@i 0003                lcd_delay@j 0005       start_initialization 7E66  
         _SendInstruction 7E70         __size_of_SendData 0028       __end_of__stringdata 0824  
                ?_InitLCD 0001                  ?_ReadKey 0001           SendData@lcddata 0007  
  SendInstruction@command 0007                 _lcd_delay 7EEC               __smallconst 0804  
 __end_of_SendInstruction 7E98                  _LATAbits 000F89                ?_lcd_delay 0001  
             __stringdata 0815                  ReadKey@i 000B                  ReadKey@j 000C  
                _SendData 7E98          __size_of_InitLCD 002C                  __Hrparam 0000  
        __size_of_ReadKey 007E                  __Lrparam 0000          ?_SendInstruction 0001  
           __size_of_main 0060               ??_lcd_delay 0003  
